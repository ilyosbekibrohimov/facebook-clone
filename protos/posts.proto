syntax = "proto3";

message AuthenticateUser {

  message Request{
    string id_token = 1; // could be : auth token, phone number, etc.
  }
  message Response{
    bool success = 1;
    int32 userId = 2;
  }
}

message  UploadPost{
  message Request{
    string title = 1;
    string content = 2;
    bytes  picture_blob = 3;
    string id = 4;
    string  user_id = 5;
    string  timestamp = 6;
  }
  message  Response {
    bool success = 1;
  }
}

message FetchPostDetails{
  message Request{
    int32 post_id = 1;
    int32 user_id = 2;
  }
  message Response{
    bool  success = 1;
    string title = 2;
    string content = 3;
    bytes pictureBlob = 4;
    string creator_name = 5;
    string creator_photoUrl = 6;
    int32 numberOfLikes = 7;
    int32 user_id = 8;
    bool  isLiked = 9;
  }
}



message FetchPostsByPage{
  message Request{
    int32 pageNumber = 1;
  }

  message Response{
    repeated int32 id = 1;
    repeated string title = 2;
    repeated string content = 3;
    repeated bytes pictureBlob = 4;
    repeated string  creator_names = 5;
    repeated string  creators_photo_url = 6;
    bool success = 7;
  }
}

message FetchCommentsByPost{
  message Request{
    int32  post_id = 1;
  }
  message Response{
    repeated string content = 1;
    repeated string userPhotoUrl = 2;
    repeated string userName = 3;
    bool  success = 4;
  }
}
message CreateComment{
  message Request{
    int32 id = 1;
    int32 post_id = 2;
    int32 user_id = 3;
    string  content = 4;
  }

  message Response{
    bool success = 1;
  }
}

message  LikePost{
  message Request{
    int32 post_id = 1;
    int32 user_id = 2;
    string timestamp = 3;
  }
  message Response{
    bool success = 1;
  }
}

message UnlikePost{
  message Request{
    int32 post_id = 1;
    int32 user_id = 2;
    string timestamp = 3;
  }

  message Response{
    bool  success = 1;
  }
}

message EditPost{
  message Request{
    int32 user_id = 1;
    int32 post_id = 2;
    string title = 3;
    string  content = 4;
    bytes  pictureBlob = 5;
  }

  message  Response{
    bool success = 1;
  }

}




//rpcs
service PostService{
  rpc authenticateUser (AuthenticateUser.Request) returns (AuthenticateUser.Response) {}
  rpc uploadPost(UploadPost.Request) returns (UploadPost.Response) {}
  rpc fetchPostDetails(FetchPostDetails.Request) returns (FetchPostDetails.Response) {}
  rpc fetchPosts(FetchPostsByPage.Request) returns (FetchPostsByPage.Response){}
  rpc createComment(CreateComment.Request) returns (CreateComment.Response){}
  rpc fetchComments(FetchCommentsByPost.Request) returns (FetchCommentsByPost.Response){}
  rpc likePost(LikePost.Request) returns (LikePost.Response){}
  rpc unlikePost(UnlikePost.Request) returns (UnlikePost.Response){}
  rpc editPost(EditPost.Request) returns (EditPost.Response){}


}

/*
gRPC HOWTO:
Compile into python script:
    python -m grpc_tools.protoc -I=[input directory] --python_out=[output directory] --grpc_python_out=[output directory] [file name].proto
    python -m grpc_tools.protoc -I=./et_protos/ --python_out=./et_grpcs/ --grpc_python_out=./et_grpcs/ et_service.proto
Compile into java source:
    protoc --java_out=[output directory] --grpc_java_out=[output directory] [file name].proto
Compile into dart / flutter:
    protoc -I=[input directory] --dart_out=grpc:[output directory] [file name].proto
Compile into swift:
    protoc -I=[input directory] --swift_out=[output directory] --grpc-swift_out=[output directory] [file name].proto
etc.
*/
